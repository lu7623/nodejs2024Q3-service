generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./database.db"
}

model User {
  id        String   @id @default(uuid())
  login     String
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id        String          @id @default(uuid())
  name      String
  grammy    Boolean
  albums    Album[]
  tracks    Track[]
  favArtist FavoriteArtist?
}

model Album {
  id       String         @id @default(uuid())
  name     String
  year     Int
  artist   Artist?        @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String?
  tracks   Track[]
  favAlbum FavoriteAlbum?
}

model Track {
  id       String         @id @default(uuid())
  name     String
  duration Int
  artist   Artist?        @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String?
  album    Album?         @relation(fields: [albumId], references: [id], onDelete: SetNull)
  albumId  String?
  favTrack FavoriteTrack?
}

model FavoriteTrack {
  id      String @id @default(uuid())
  track   Track  @relation(fields: [trackId], references: [id], onDelete: Cascade)
  trackId String @unique
}

model FavoriteAlbum {
  id      String @id @default(uuid())
  album   Album  @relation(fields: [albumId], references: [id], onDelete: Cascade)
  albumId String @unique
}

model FavoriteArtist {
  id       String @id @default(uuid())
  artist   Artist @relation(fields: [artistId], references: [id], onDelete: Cascade)
  artistId String @unique
}
